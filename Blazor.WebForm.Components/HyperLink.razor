@using Blazor.WebForm.UI
@using Blazor.WebForm.UI.ControlComponents
@using System.Web.UI
@using System.Web.UI.WebControls
@inherits WebControlComponent<System.Web.UI.WebControls.HyperLink>
@this.RenderWithInner(this.Control)
@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ImageUrl
    {
        get
        {
            return this.Control.ImageUrl;
        }
        set
        {
            this.Control.ImageUrl = value;
        }
    }

    [Parameter]
    public string ImageHeight
    {
        get
        {
            return this.ConvertToString(this.Control.ImageHeight);
        }
        set
        {
            this.Control.ImageHeight = this.ConvertFromString<Unit>(value);
        }
    }

    [Parameter]
    public string ImageWidth
    {
        get
        {
            return this.ConvertToString(this.Control.ImageWidth);
        }
        set
        {
            this.Control.ImageWidth = this.ConvertFromString<Unit>(value);
        }
    }

    [Parameter]
    public string NavigateUrl
    {
        get
        {
            return this.Control.NavigateUrl;
        }
        set
        {
            this.Control.NavigateUrl = value;
        }
    }

    [Parameter]
    public string Target
    {
        get
        {
            return this.Control.Target;
        }
        set
        {
            this.Control.Target = value;
        }
    }

    [Parameter]
    public string Text
    {
        get
        {
            return this.Control.Text;
        }
        set
        {
            this.Control.Text = value;
        }
    }

    protected override void SetInnerPropertyWithInner(IReadOnlyDictionary<string, object> parameters)
    {
        if (parameters.ContainsKey(nameof(this.ChildContent)) && this.ChildContent != null)
        {
            RenderUtility.SetContentString(this.Control, this.ChildContent);
        }
    }
}
