@using Blazor.WebForm.UI;
@using Blazor.WebForm.UI.ControlComponents;
@using System.Web.UI;
@using System.Web.UI.WebControls;
@inherits UserControlComponent<Blazor.WebForm.UI.HolderSource>
@this.RenderWithCascading(this.Control, this.ChildContent)
@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string PlaceHolderID
    {
        get
        {
            return this.Control.PlaceHolderID;
        }
        set
        {
            this.Control.PlaceHolderID = value;
        }
    }

    [Parameter]
    public bool IsLoad
    {
        get
        {
            return this.Control.IsLoad;
        }
        set
        {
            if (!this.Initialized)
            {
                return;
            }
            this.Control.IsLoad = value;
        }
    }

    [Parameter]
    public object DataItem
    {
        get
        {
            return this.Control.DataItem;
        }
        set
        {
            this.Control.DataItem = value;
        }
    }

    protected override void SetInnerPropertyWithCascading(IReadOnlyDictionary<string, object> parameters)
    {
        if (parameters.TryGetValue(nameof(this.IsLoad), out object value) && value is bool isLoad)
        {
            if (this.IsLoad != isLoad)
            {
                this.IsLoad = isLoad;
            }
        }
    }
}
