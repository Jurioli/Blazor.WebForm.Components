@using Blazor.WebForm.UI;
@using Blazor.WebForm.UI.ControlComponents;
@using System.Web.UI;
@using System.Web.UI.WebControls;
@inherits BaseValidatorControlComponent<System.Web.UI.WebControls.CustomValidator>
@this.RenderWithInner(this.Control)
@code {
    private ServerValidateEventHandler _serverValidate;

    [Parameter]
    public string ClientValidationFunction
    {
        get
        {
            return this.Control.ClientValidationFunction;
        }
        set
        {
            this.Control.ClientValidationFunction = value;
        }
    }

    [Parameter]
    public bool ValidateEmptyText
    {
        get
        {
            return this.Control.ValidateEmptyText;
        }
        set
        {
            this.Control.ValidateEmptyText = value;
        }
    }

    [Parameter]
    public ServerValidateEventHandler OnServerValidate
    {
        get
        {
            return _serverValidate;
        }
        set
        {
            if (value != null)
            {
                this.Control.ServerValidate += InvokeServerValidate;
            }
            else
            {
                this.Control.ServerValidate -= InvokeServerValidate;
            }
            _serverValidate = value;
        }
    }

    private void InvokeServerValidate(object source, ServerValidateEventArgs args)
    {
        _serverValidate.Invoke(source, args);
    }
}
